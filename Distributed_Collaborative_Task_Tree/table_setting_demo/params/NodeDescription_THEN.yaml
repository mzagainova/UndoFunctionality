# typedef enum NodeTypes {  // Eight possible node types
#   THEN = 0,     // 0
#   OR,           // 1
#   AND,          // 2
#   BEHAVIOR,     // 3
#   R0OT,         // 4
# } NodeTypes_t;

NodeList: ['ROOT_4_0_000', 'THEN_0_0_001', 'PLACE_3_0_002', 'PLACE_3_0_003']
Nodes: 
  ROOT_4_0_000:
    mask:
      type: 4
      robot: 0
      node: 0
    parent: 'NONE'
    children: ['THEN_0_0_001']
    peers: ['NONE']
  THEN_0_0_001:
    mask:
      type: 0
      robot: 0
      node: 1
    parent: ROOT_4_0_000
    children: ['PLACE_3_0_002', 'PLACE_3_0_003']
    peers: ['NONE']
  PLACE_3_0_002:
    mask:
      type: 3
      robot: 0
      node: 2
    parent: THEN_0_0_001
    peers: ['NONE']
    object: Left_Bread
  PLACE_3_0_003:
    mask:
      type: 3
      robot: 0
      node: 3
    parent: THEN_0_0_001
    peers: ['NONE']
    object: Right_Bread
